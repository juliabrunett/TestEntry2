Subroutine:	MESSAGE_BOX

To process messages in Synergy code and put the MSG_BOX in center of active Synergy Window
regardless of the size of the Synergy window and MSG_BOX. Std code or UI-Toolkit compatible.

Supports:	Up to 5 lines of message text
		Up to 5 Buttons (Programmable and Configurable)
		Buttons can have Tool Tips and can set default Button
		Active Character for firing a Button by pressing First character of Button Text
		Default Button can be configured for when user presses Enter
		Works in DBL and UI-Toolkit programs
		Can accommodate use of Function Keys
		Can configure which Function Keys are permitted
		User can reposition MSG_BOX to view data behind by dragging the MSG_BOX window
		If user repositions MSG_BOX then next similar MSG instance will be at new position.
		Dissimilar messages will revert to center of window
		Works equally well in BATCH mode (BATCH environment variable set to B)
		In Batch does not pause for input but returns a predefined value.
		Can capture all function keys
			F1  - F12	Normal Function Keys
			SF1 - SF12	Shift  Function Keys
			CF1 - CF12	Ctrl   Function Keys
			Programmer can nominate which Function keys are permitted
		Has timeout variable (in seconds) Or can wait forever for user input.


Min Version: 	9 Synergy

Limitation:	u_start will clear active channels (currently set to clear 250 - 253)
		If old style code using OPEN (TTCHN,O,'TT:') u_start can potentially 
		close terminal channel.

Can be used in old style DBL code

	OPEN (TT,O,'TT:')
	XCALL MESSAGE_BOX

and in UT-Toolkit code

	U_Start
	XCALL MESSAGE_BOX

Provided in the Synergex CodeExchange
1. This MESSAGE_BOX.TXT file
2. README.md
3. Subroutine	MESSAGE_BOX.DBL
4. Demo Program	DEMO_MESSAGE_BOX.DBL

To Build Demo program
create bat file contain below.
@echo off
@SETLOCAL
if exist DEMO_MESSAGE_BOX.dbr del DEMO_MESSAGE_BOX.dbr
echo build program
dbl -d DEMO_MESSAGE_BOX
dbl -d MESSAGE_BOX
echo link program
dblink -d DEMO_MESSAGE_BOX MESSAGE_BOX wnd:tklib.elb
echo finished build
if exist DEMO_MESSAGE_BOX.dbr echo Program compiled
if not exist DEMO_MESSAGE_BOX.dbr echo Program did not build successfully

To run Demo Program
dbr DEMO_MESSAGE_BOX

The Demo program first runs in old style mode using
OPEN (CHN,O,'TT:')
It makes a couple of calls to message box.
It then runs in UI-Toolkit mode after issuing a u_start and building a Synergy Window.
It cycles through a few calls to MESSAGE_BOX and modifies the Synergy Window size
by reducing the Rows and Cols.

Many of the parameters in the xcall are optional. 
See complete documentation with Subroutien Code.

Good luck.

